const c=async s=>{const o=await fetch(`/api/v1/data/meteorology/${s}`).then(t=>t.json()).then(t=>t.data),r=o[0].type1,a=new Set,n=new Map;return o.forEach(t=>{const e=t.type3.length===0?t.type2:t.type2+" - "+t.type3;a.add(e);const i=n.get(e);i?i.add(t.time):(n.set(e,new Set),n.get(e).add(t.time))}),{imageType:r,type:a,time:n}},m=async(s,o,r)=>{let a=o,n="";o.includes("-")&&(a=o.split(" - ")[0],n=o.split(" - ")[1]);const t=`/api/v1/data/meteorology/time&type?time=${r}&type1=${s}&type2=${a}&type3=${n}`,e=await fetch(t).then(p=>p.blob()).then(p=>p);return URL.createObjectURL(e)},g=async()=>{const s={},o=new Date(Date.now()+288e5).getMonth().toString().padStart(2,"0"),a=`http://typhoon.zjwater.gov.cn/Api/TyphoonInfo/${new Date(Date.now()+8*3600*1e3).getFullYear().toString()}${o}`,n=await fetch(a).then(t=>t.json()).then(t=>t).catch(()=>null);if(n!=null&&n.name){const t=n.points.map((e,i)=>({id:i.toString(),name:n.name,time:e.time,lng:Number(e.lng),lat:Number(e.lat),strong:e.strong,power:e.power,speed:e.speed,pressure:e.pressure,moveSpeed:e.movespeed,moveDirection:e.movedirection}));return s[n.name]=t,s}return{}};export{m as a,g as b,c as g};
