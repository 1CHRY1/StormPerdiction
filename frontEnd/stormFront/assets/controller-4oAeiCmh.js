import{u as J,a as v,s as K,i as z,v as V,b as m,r as P,c as w,d as Q,e as Z,f as ee,P as D,N as I,g as k,D as te,h as ie}from"./axios-CfQa2ZHH.js";import{b as se,f as U,m as j,c as C,d as Y,e as re,g as L,r as y,M as E,h as W}from"./initMap--QzwS8UC.js";import{g as ne,c as x,G as $,o as F,b as B,d as _,f as N,i as ae,l as oe,e as p,t as S,_ as b,a as de,h as X,F as le,n as ue,q as R,s as M,r as g,y as A}from"./index-BqiXETND.js";class Ke{constructor(t,i,l,h,r){this.type="custom",this.map=void 0,this.id=t,this.renderingMode="3d",this.preheat=0,this.swapPointer=0,this.extent=se(),this.worker=void 0,this.uvUrlList=l,this.stationUrl=i,this.maskUrl=r,this.endPoint="",this.progress=0,this.startPoint="",this.framesPerPhase=100,this.maxSpeed=U(),this.maxParticleNum=1e4,this.progressRate=U(),this.currentResourcePointer=0,this.particleNum=J(3e3),this.speedFactor=U(1),this.timePointParser=h,this.randomSeed=U(Math.random()),this.blockSizeX=16,this.blockSizeY=16,this.lastMvp=j(),this.lastMvpInverse=j(),this.groupSizeX=Math.ceil(Math.sqrt(this.maxParticleNum)/this.blockSizeX),this.groupSizeY=Math.ceil(Math.sqrt(this.maxParticleNum)/this.blockSizeY),this.randomFillData=new Float32Array(this.maxParticleNum*6).map((n,a)=>a%6==4||a%6==5?0:Math.random()),this.toRef=void 0,this.fromRef=void 0,this.nextRef=void 0,this.uniformBuffer_frame=void 0,this.indexBuffer_voronoi=void 0,this.vertexBuffer_voronoi=void 0,this.uniformBuffer_static=void 0,this.storageBuffer_particle=void 0,this.particleRef=v(this.randomFillData),this.flowTexture=void 0,this.depthTexture=void 0,this.layerTexture1=void 0,this.layerTexture2=void 0,this.copiedDepthTexture=void 0,this.showBinding=void 0,this.layerBindings=void 0,this.voronoiBinding=void 0,this.segmentBinding=void 0,this.voronoiToBinding=void 0,this.simulationBinding=void 0,this.trajectoryBindings=void 0,this.showPipeline=void 0,this.layerPipeline=void 0,this.voronoiPipeline=void 0,this.segmentPipeline=void 0,this.trajectoryPipeline=void 0,this.simulationPipeline=void 0,this.swapPasses=void 0,this.voronoiPass=void 0,this.simulationPass=void 0,this.isHided=!1,this.isIdling=!1,this.showArrow=!1,this.showVoronoi=!0,this.nextPrepared=!1,this.isInitialized=!1,this.nextPreparing=!1}onAdd(t,i){this.map=t,this.map.on("movestart",()=>this.idle()),this.map.on("move",()=>this.idle()),this.map.on("moveend",()=>this.restart()),this.map.on("dragstart",()=>this.idle()),this.map.on("drag",()=>this.idle()),this.map.on("dragend",()=>this.restart()),this.map.on("zoomstart",()=>this.idle()),this.map.on("zoom",()=>this.idle()),this.map.on("zoomend",()=>this.restart()),this.map.on("rotatestart",()=>this.idle()),this.map.on("rotate",()=>this.idle()),this.map.on("rotateend",()=>this.restart()),this.map.on("pitchstart",()=>this.idle()),this.map.on("pitch",()=>this.idle()),this.map.on("pitchend",()=>this.restart()),this.addWorker(new Worker(new URL("/assets/flowJson.worker-DpdRasT2.js",import.meta.url),{type:"module"})),this.init()}render(t,i){if(this.map.triggerRepaint(),!(!this.isInitialized||this.isIdling||this.preheat-- >0)){if(this.isHided){this.makeVisibility(!1);return}else this.makeVisibility(!0);this.showBinding.executable=!1,this.maskBinding.executable=!0,this.swapPasses[0].executable=this.swapPasses[1].executable=this.layerBindings[0].executable=this.swapPointer,this.swapPasses[2].executable=this.swapPasses[3].executable=this.layerBindings[1].executable=1-this.swapPointer,this.swapPointer=(this.swapPointer+1)%2,this.updateVoronoi(),this.randomSeed.n=Math.random(),this.lastMvp.copyFrom(this.map.uMatrix),this.lastMvpInverse.copyFrom(this.map.mvpInverse)}}async resetResource(t){let i=async l=>{this.nextPreparing=!0;const h=await k.get(l,{responseType:"arraybuffer"}),r=new Float32Array(h.data);let n=-1/0;for(let a=0;a<r.length;a+=2){const o=r[a+0],c=r[a+1],f=Math.sqrt(o*o+c*c);n=f>n?f:n}this.nextRef.value=r,this.updateMaxSpeed(n),this.nextPreparing=!1,this.nextPrepared=!0};this.progress=0,this.maxSpeed.n=0,this.progressRate.n=0,this.uvUrlList=t,this.startPoint=this.timePointParser(this.uvUrlList[0]),this.endPoint=this.timePointParser(this.uvUrlList[this.uvUrlList.length-1]),await i(this.uvUrlList[0]),this.swapVoronoiBinding(),await i(this.uvUrlList[1]),this.swapVoronoiBinding(),this.currentResourcePointer=1,this.nextPrepared=!0}async setProgress(t){let i=Math.ceil(t/100*(this.uvUrlList.length-1)),l=i+1;l==this.uvUrlList.length&&(l=0);let h=async r=>{this.nextPreparing=!0;const n=await k.get(r,{responseType:"arraybuffer"}),a=new Float32Array(n.data);let o=-1/0;for(let c=0;c<a.length;c+=2){const f=a[c+0],u=a[c+1],s=Math.sqrt(f*f+u*u);o=s>o?s:o}this.nextRef.value=a,this.updateMaxSpeed(o),this.nextPreparing=!1,this.nextPrepared=!0};this.progress=0,this.maxSpeed.n=0,this.progressRate.n=0,this.startPoint=this.timePointParser(this.uvUrlList[0]),this.endPoint=this.timePointParser(this.uvUrlList[this.uvUrlList.length-1]),await h(this.uvUrlList[i]),this.swapVoronoiBinding(),await h(this.uvUrlList[l]),this.swapVoronoiBinding(),this.currentResourcePointer=l,this.nextPrepared=!0}async init(){this.isInitialized=!1;let t=async r=>{const n=await k.get(r,{responseType:"arraybuffer"}),a=new te(new Float32Array(n.data)),o=[],c=a.triangles;for(let f=0;f<a.points.length;f+=2){this.extent.update(a.points[f+0],a.points[f+1]);const u=H(E.mercatorXfromLon(a.points[f+0])),s=H(E.mercatorYfromLat(a.points[f+1]));o.push(u[0]),o.push(s[0]),o.push(u[1]),o.push(s[1])}return this.nextRef=v(new Float32Array(a.points.length).fill(0)),this.fromRef=v(new Float32Array(a.points.length).fill(0)),this.toRef=v(new Float32Array(a.points.length).fill(0)),{indices:c,vertices:o}};const{indices:i,vertices:l}=await t(this.stationUrl);await this.resetResource(this.uvUrlList),this.storageBuffer_particle=K({name:"Storage Buffer (Particle Position & Velocity)",resource:{arrayRef:this.particleRef}}),this.uniformBuffer_static=C({name:"Uniform Buffer (Flow Layer Static)",blocks:[Y({name:"staticUniform",map:{groupSize:re(this.groupSizeX,this.groupSizeY),extent:this.extent.boundary}})]}),this.uniformBuffer_frame=C({name:"Uniform Buffer (Flow Layer Frame)",blocks:[Y({name:"frameUniform",dynamic:!0,map:{randomSeed:this.randomSeed,viewPort:this.map.screen.sizeF,mapBounds:this.map.cameraBounds.boundary,zoomLevel:this.map.zoom,progressRate:this.progressRate,maxSpeed:this.maxSpeed,lastMvp:this.lastMvp,lastMvpInverse:this.lastMvpInverse,fillWidth:L(1),aaWidth:L(2)}})]}),this.layerTexture1=this.map.screen.createScreenDependentTexture("Texture (Background 1)"),this.layerTexture2=this.map.screen.createScreenDependentTexture("Texture (Background 2)"),this.flowTexture=this.map.screen.createScreenDependentTexture("Texture (Velocity)","rg32float"),this.maskTexture=this.map.screen.createScreenDependentTexture("Texture(Mask)"),await(async r=>{let a=(await k.get(r)).data.features[0].geometry.coordinates[0];var o=W.flatten(a),c=W(o.vertices,o.holes,o.dimensions);a=o.vertices.flat();const f=`
                struct Vinput{
                    @builtin(vertex_index) vertexIndex: u32,
                    @location(0) position: vec2f,
                }
                struct Voutput {
                    @builtin(position) position: vec4f,
                }
        
                struct FrameUniformBlock {
                    randomSeed: f32,
                    viewPort: vec2f,
                    mapBounds: vec4f,
                    zoomLevel: f32,
                    progressRate: f32,
                    maxSpeed: f32,
                };
                
                struct StaticUniformBlock {
                    groupSize: vec2u,
                    extent: vec4f,
                };
                
                struct DynamicUniformBlock {
                    far: f32,
                    near: f32,
                    uMatrix: mat4x4f,
                    centerLow: vec3f,
                    centerHigh: vec3f,
                };
                
                // Uniform Bindings
                @group(0) @binding(0) var<uniform> frameUniform: FrameUniformBlock;
                @group(0) @binding(1) var<uniform> staticUniform: StaticUniformBlock;
                @group(0) @binding(2) var<uniform> dynamicUniform: DynamicUniformBlock;
        
                
                fn translateRelativeToEye(high: vec3f, low: vec3f) -> vec3f {
        
                    let highDiff = high - dynamicUniform.centerHigh;
                    let lowDiff = low - dynamicUniform.centerLow;
        
                    return highDiff + lowDiff;
                }
        
                @vertex
                fn vMain(in: Vinput) -> Voutput {
                    
                    let pos = vec4f(in.position,0.0,1.0);
                    let cs_pos = dynamicUniform.uMatrix * vec4f(translateRelativeToEye(vec3f(in.position, 0.0), vec3f(0.0)), 1.0);
        
                    var out: Voutput;
                    out.position = cs_pos;
                    return out;
                }
            
                @fragment
                fn fMain(in: Voutput) -> @location(0) vec4f {
                    return vec4f(1.0,0.0,0.0,0.3);
                }
            `;let u=[];for(let T=0;T<a.length;T+=2){let[O,G]=he(a[T],a[T+1]);u.push(O),u.push(G)}let s=V({name:"vertex··buffer",resource:{arrayRef:v(new Float32Array(u)),structure:[{components:2}]}}),e=z({name:"index··buffer",resource:{arrayRef:v(new Uint32Array(c))}});this.maskBinding=m({name:"mask··binding",range:()=>[c.length],vertices:[{buffer:s}],index:{buffer:e},sharedUniforms:[{buffer:this.uniformBuffer_frame},{buffer:this.uniformBuffer_static},{buffer:this.map.dynamicUniformBuffer}]}),this.maskPipline=P({name:"mask··pipline",shader:{module:ie({name:"shader",codeFunc:()=>f})}})})(this.maskUrl),this.maskPass=y({name:"mask render pass",colorAttachments:[{colorResource:this.maskTexture}]}).add(this.maskPipline,this.maskBinding),this.indexBuffer_voronoi=z({name:"IndexBuffer (Voronoi Index)",resource:{arrayRef:v(new Uint32Array(i))}}),this.vertexBuffer_voronoi=V({name:"VertexBuffer (Station Position)",resource:{arrayRef:v(new Float32Array(l)),structure:[{components:4}]}}),this.voronoiBinding=m({name:"Binding (Flow-Field Voronoi)",range:()=>[this.indexBuffer_voronoi.length],index:{buffer:this.indexBuffer_voronoi},textures:[{texture:this.maskTexture,sampleType:"unfilterable-float"}],vertices:[{buffer:this.vertexBuffer_voronoi},{buffer:V({name:"VertexBuffer (Station Velocity (From))",resource:{arrayRef:this.fromRef,structure:[{components:2}]}})},{buffer:V({name:"VertexBuffer (Station Velocity (To))",resource:{arrayRef:this.toRef,structure:[{components:2}]}})}],sharedUniforms:[{buffer:this.uniformBuffer_frame},{buffer:this.uniformBuffer_static},{buffer:this.map.dynamicUniformBuffer}]}),this.voronoiPipeline=P({name:"Render Pipeline (Voronoi Flow)",shader:{module:w.load("Shader (Flow Voronoi)","/shaders/flowVoronoi_mask.wgsl")}}),this.voronoiPass=y({name:"Render Pass (Voronoi Flow From)",colorAttachments:[{colorResource:this.flowTexture}],depthStencilAttachment:{depthStencilResource:this.map.depthTexture}}).add(this.voronoiPipeline,this.voronoiBinding),this.simulationBinding=m({name:"Binding (Particle Simulation)",range:()=>[this.groupSizeX,this.groupSizeY],textures:[{texture:this.flowTexture,sampleType:"unfilterable-float"}],storages:[{buffer:this.storageBuffer_particle,writable:!0}],uniforms:[{name:"controllerUniform",dynamic:!0,map:{particleNum:Q(this.maxParticleNum),dropRate:L(.003),dropRateBump:L(.001),speedFactor:this.speedFactor}}],sharedUniforms:[{buffer:this.uniformBuffer_frame},{buffer:this.uniformBuffer_static},{buffer:this.map.dynamicUniformBuffer}]}),this.simulationPipeline=Z({name:"Compute Pipeline (Flow Simulation)",shader:{module:w.load("Shader (Particle Simulation)","/shaders/simulation.compute.wgsl")},constants:{blockSize:16}}),this.simulationPass=ee({name:"Compute Pass (Particle Simulation)"}).add(this.simulationPipeline,this.simulationBinding),this.trajectoryBindings=[m({name:"Binding (Background Swap 1)",range:()=>[4],textures:[{texture:this.layerTexture2}],sharedUniforms:[{buffer:this.uniformBuffer_frame},{buffer:this.map.dynamicUniformBuffer}]}),m({name:"Binding (Background Swap 2)",range:()=>[4],textures:[{texture:this.layerTexture1}],sharedUniforms:[{buffer:this.uniformBuffer_frame},{buffer:this.map.dynamicUniformBuffer}]})],this.trajectoryPipeline=P({name:"Render pipeline (Background Trajectory)",shader:{module:w.load("Shader (Background Trajectory)","/shaders/trajectory.wgsl")},colorTargetStates:[{blend:D}],primitive:{topology:"triangle-strip"},depthTest:!1}),this.segmentBinding=m({name:"Binding (Segment)",range:()=>[4,this.particleNum.n],storages:[{buffer:this.storageBuffer_particle}],sharedUniforms:[{buffer:this.uniformBuffer_frame},{buffer:this.uniformBuffer_static},{buffer:this.map.dynamicUniformBuffer}]}),this.segmentPipeline=P({name:"Render Pipeline (Segment)",shader:{module:w.load("Shader (Segment)","/shaders/segment.wgsl")},colorTargetStates:[{blend:D}],primitive:{topology:"triangle-strip"}}),this.swapPasses=[y({name:"Render Pass (Past Trajectory 1)",colorAttachments:[{colorResource:this.layerTexture1}],depthStencilAttachment:{depthStencilResource:this.map.depthTexture}}).add(this.trajectoryPipeline,this.trajectoryBindings[0]),y({name:"Render Pass (Current Segment 1)",colorAttachments:[{colorResource:this.layerTexture1,loadOp:"load"}],depthStencilAttachment:{depthStencilResource:this.map.depthTexture,depthLoadOp:"load"}}).add(this.segmentPipeline,this.segmentBinding),y({name:"Render Pass (Past Trajectory 2)",colorAttachments:[{colorResource:this.layerTexture2}],depthStencilAttachment:{depthStencilResource:this.map.depthTexture}}).add(this.trajectoryPipeline,this.trajectoryBindings[1]),y({name:"Render Pass (Current Segment 2)",colorAttachments:[{colorResource:this.layerTexture2,loadOp:"load"}],depthStencilAttachment:{depthStencilResource:this.map.depthTexture,depthLoadOp:"load"}}).add(this.segmentPipeline,this.segmentBinding),y({name:"Render Pass (Texture Empty)",colorAttachments:[{colorResource:this.layerTexture1},{colorResource:this.layerTexture2}]})],this.layerBindings=[m({name:"Binding (Layer Renderig 1)",range:()=>[4],textures:[{texture:this.layerTexture1}]}),m({name:"Binding (Layer Renderig 2)",range:()=>[4],textures:[{texture:this.layerTexture2}]})],this.layerPipeline=P({name:"Render Pipeline (Layer Rendering)",shader:{module:w.load("Shader (Flow Layer Rendering)","/shaders/flowLayer.wgsl")},primitive:{topology:"triangle-strip"},colorTargetStates:[{blend:I}]}),this.showBinding=m({name:"Binding (Flow Show)",range:()=>[4],textures:[{texture:this.flowTexture,sampleType:"unfilterable-float"}],sharedUniforms:[{buffer:this.uniformBuffer_frame}]}),this.showPipeline=P({name:"Render Pipeline (Flow Show)",shader:{module:w.load("Shader (Flow Show)","/shaders/flowShow.wgsl")},primitive:{topology:"triangle-strip"},colorTargetStates:[{blend:I}]}),this.arrowBinding=m({name:"Binding (Arrow)",range:()=>[4,this.particleNum.n],storages:[{buffer:this.storageBuffer_particle}],sharedUniforms:[{buffer:this.uniformBuffer_frame},{buffer:this.uniformBuffer_static},{buffer:this.map.dynamicUniformBuffer}]}),this.arrowPipeline=P({name:"Render Pipeline (Flow Arrow)",shader:{module:w.load("Shader (Flow Show)","/shaders/arrow.wgsl")},primitive:{topology:"triangle-strip"},colorTargetStates:[{blend:I}]}),this.swapPasses[0].executable=!0,this.swapPasses[1].executable=!0,this.swapPasses[2].executable=!1,this.swapPasses[3].executable=!1,this.swapPasses[4].executable=!1,this.layerBindings[0].executable=!0,this.layerBindings[1].executable=!1,this.showArrow&&this.map.add2RenderPass(this.arrowPipeline,this.arrowBinding),this.showVoronoi&&this.map.add2RenderPass(this.showPipeline,this.showBinding).add2RenderPass(this.layerPipeline,this.layerBindings[0]).add2RenderPass(this.layerPipeline,this.layerBindings[1]),this.map.add2PreProcess(this.maskPass).add2PreProcess(this.voronoiPass).add2PreProcess(this.simulationPass).add2PreProcess(this.swapPasses[0]).add2PreProcess(this.swapPasses[1]).add2PreProcess(this.swapPasses[2]).add2PreProcess(this.swapPasses[3]).add2PreProcess(this.swapPasses[4]),this.isInitialized=!0}idle(){this.trajectoryPipeline&&(this.trajectoryPipeline.executable=!1)}restart(){this.trajectoryPipeline&&(this.trajectoryPipeline.executable=!0)}show(){this.isHided=!1}hide(){this.isHided=!0}makeVisibility(t){t?(this.showPipeline.executable=!0,this.voronoiPass.executable=!0,this.simulationPass.executable=!0):(this.showPipeline.executable=!1,this.layerBindings[0].executable=!1,this.layerBindings[1].executable=!1,this.voronoiPass.executable=!1,this.swapPasses[0].executable=!1,this.swapPasses[1].executable=!1,this.swapPasses[2].executable=!1,this.simulationPass.executable=!1)}updateMaxSpeed(t){this.maxSpeed.n=t>this.maxSpeed.n?t:this.maxSpeed.n}updateVoronoi(){this.nextPreparing||(this.progress===0&&(this.currentResourcePointer=(this.currentResourcePointer+1)%this.uvUrlList.length,this.addVoronoiBindingAsync(this.uvUrlList[this.currentResourcePointer])),this.progress=Math.min(this.progress+1,this.framesPerPhase-1),this.nextPrepared&&this.progress===this.framesPerPhase-1&&(this.progress=0,this.swapVoronoiBinding()),this.progressRate.n=this.progress/(this.framesPerPhase-1))}swapVoronoiBinding(){let t=this.fromRef.value;this.fromRef.value=this.toRef.value,this.toRef.value=t,t=this.toRef.value,this.toRef.value=this.nextRef.value,this.nextRef.value=t,this.nextPrepared=!1}addWorker(t){const i=this;this.worker=t,this.worker.addEventListener("message",l=>{const{url:h,maxSpeed:r,uvs:n}=l.data;i.updateMaxSpeed(r),i.nextRef.value=n,i.nextPrepared=!0,i.nextPreparing=!1})}addVoronoiBindingAsync(t){this.nextPreparing=!0,this.worker.postMessage({url:t})}get localProgress(){return this.progressRate.n}get globalProgress(){return(this.currentResourcePointer+this.progressRate.n)/this.uvUrlList.length}destroy(){this.type=void 0,this.map=void 0,this.id=void 0,this.renderingMode=void 0,this.preheat=void 0,this.swapPointer=void 0,this.extent=void 0,this.worker=void 0,this.uvUrlList=void 0,this.stationUrl=void 0,this.endPoint=void 0,this.progress=void 0,this.startPoint=void 0,this.framesPerPhase=void 0,this.maxSpeed=void 0,this.maxParticleNum=void 0,this.progressRate=void 0,this.currentResourcePointer=void 0,this.particleNum=void 0,this.speedFactor=void 0,this.timePointParser=void 0,this.randomSeed=void 0,this.blockSizeX=void 0,this.blockSizeY=void 0,this.lastMvp=void 0,this.lastMvpInverse=void 0,this.groupSizeX=void 0,this.groupSizeY=void 0,this.randomFillData=void 0,this.toRef=void 0,this.fromRef=void 0,this.nextRef=void 0,this.uniformBuffer_frame=void 0,this.indexBuffer_voronoi=void 0,this.vertexBuffer_voronoi=void 0,this.uniformBuffer_static=void 0,this.storageBuffer_particle=void 0,this.particleRef=void 0,this.flowTexture=void 0,this.depthTexture=void 0,this.layerTexture1=void 0,this.layerTexture2=void 0,this.copiedDepthTexture=void 0,this.showBinding=void 0,this.layerBindings=void 0,this.voronoiBinding=void 0,this.segmentBinding=void 0,this.voronoiToBinding=void 0,this.simulationBinding=void 0,this.trajectoryBindings=void 0,this.showPipeline=void 0,this.layerPipeline=void 0,this.voronoiPipeline=void 0,this.segmentPipeline=void 0,this.trajectoryPipeline=void 0,this.simulationPipeline=void 0,this.swapPasses=void 0,this.voronoiPass=void 0,this.simulationPass=void 0,this.isHided=void 0,this.isIdling=void 0,this.showArrow=void 0,this.showVoronoi=void 0,this.nextPrepared=void 0,this.isInitialized=void 0,this.nextPreparing=void 0}}function H(d){const t=new Float32Array(2);t[0]=d;const i=d-t[0];return t[1]=i,t}function he(d,t){let i=(180+d)/360,l=(180-180/Math.PI*Math.log(Math.tan(Math.PI/4+t*Math.PI/360)))/360;return[i,l]}const fe={class:"timestep-shower"},ce={class:"percentage-value"},pe={class:"percentage-label"},me=100,ge=ne({__name:"timeShower",props:{timeStep:Number,type:String},setup(d){const t=d,i=x(()=>{if(t.type=="normal"){let r=$().startOf("day"),n=t.timeStep/6;return r.add(n,"hour").format("YYYY/MM/DD HH")}else if(t.type=="9711"){let r=$("1997-08-16").startOf("day"),n=t.timeStep*6;return r.add(n,"hour").format("YYYY/MM/DD HH")}else if(t.type=="9711adwt"){let r=$("1997-08-12").startOf("day"),n=t.timeStep*1;return r.add(n,"hour").format("YYYY/MM/DD HH")}}),l=x(()=>i.value.split(" ")[1]),h=x(()=>i.value.split(" ")[0]);return F(()=>{}),(r,n)=>{const a=oe("el-progress");return B(),_("div",fe,[N(a,{type:"dashboard",percentage:me},{default:ae(({percentage:o})=>[p("span",ce,S(l.value+"时"),1),p("span",pe,S(h.value),1)]),_:1})])}}}),Qe=b(ge,[["__scopeId","data-v-cf392021"]]),q=d=>(R("data-v-2208f6cb"),d=d(),M(),d),ve={class:"flow-legend"},xe={class:"legend-title"},Pe=q(()=>p("hr",null,null,-1)),we={class:"legend-body"},ye=q(()=>p("canvas",{id:"pallete-flow",width:"40",height:"160"},null,-1)),Be={class:"legend-desc"},_e={class:"legend-text"},Se={__name:"flowLegend",props:{maxSpeed:Number,desc:String,addRange:Array},setup(d){const t=d,i=de(["0","0","0","0","0","0","0","0"]),l=()=>{if(t.desc==="风速(m/s)"){if(t.maxSpeed)for(let r=0;r<8;r++)i[7-r]=(t.maxSpeed/8*r).toFixed(2)}else if(t.desc==="流速(m/s)"){if(t.maxSpeed){let r=t.maxSpeed;r>3&&(r=3+Math.random()*.5);for(let n=0;n<8;n++)i[7-n]=(r/8*n).toFixed(2)}}else if(t.desc==="风暴增水(m)"){let r=t.addRange[0],n=t.addRange[1],a=(r-n)/7;for(let o=0;o<8;o++)i[7-o]=(n+a*o).toFixed(2)}};X(t,r=>{l()}),F(()=>{h(["#3288bd","#66c2a5","#abdda4","#e6f598","#fee08b","#fdae61","#f46d43","#d53e4f"])});const h=r=>{const n=document.querySelector("#pallete-flow"),a=n.getContext("2d");let o=n.width,c=n.height/r.length;for(let f=0;f<r.length;f++)a.fillStyle=r[f],a.fillRect(0,(r.length-1-f)*c,o,c)};return(r,n)=>(B(),_("div",ve,[p("div",xe,S(t.desc),1),Pe,p("div",we,[ye,p("div",Be,[(B(),_(le,null,ue(8,a=>p("div",_e,S(i[a-1]),1)),64))])])]))}},Ze=b(Se,[["__scopeId","data-v-2208f6cb"]]),be=d=>(R("data-v-3273bdfa"),d=d(),M(),d),Re={class:"particleNum-bar"},Me=be(()=>p("div",{class:"tt"},"流线数量",-1)),Te={class:"percentage"},Ve={__name:"particleNumBar",props:{nowParticleNum:Number,maxParticleNum:Number},emits:["particleNumValue"],setup(d,{emit:t}){const i=g(),l=g("left: 0"),h=g(0),r=t,n=d,a=u=>{window.addEventListener("mouseup",c),window.addEventListener("mousemove",o)},o=u=>{if(!i.value)return;let s=i.value.clientWidth,e=u.pageX-i.value.getBoundingClientRect().left;e<=0?e=0:e<s?e=e:e>=s&&(e=s),l.value=`left: ${e}px`,h.value=e/s,r("particleNumValue",Math.ceil(h.value*n.maxParticleNum))},c=()=>{window.removeEventListener("mouseup",c),window.removeEventListener("mousemove",o)},f=u=>{let s=i.value.clientWidth,e=u.pageX-i.value.getBoundingClientRect().left;e<=0?e=0:e<s?e=e:e>=s&&(e=s),l.value=`left: ${e}px`,h.value=e/s,r("particleNumValue",Math.ceil(h.value*n.maxParticleNum))};return F(()=>{const s=Math.ceil(n.nowParticleNum/n.maxParticleNum*8);l.value=`left: ${s}vw`}),(u,s)=>(B(),_("div",Re,[Me,p("div",{class:"bar",ref_key:"bar",ref:i,onClick:f},[p("div",{class:"slider",style:A(l.value),onMousedown:a},null,36)],512),p("div",Te,S(n.nowParticleNum),1)]))}},ke=b(Ve,[["__scopeId","data-v-3273bdfa"]]),Ue=d=>(R("data-v-3f2d6ca8"),d=d(),M(),d),Le={class:"progress-bar"},Ne=Ue(()=>p("div",{class:"tt"},"进度控制",-1)),Fe={class:"percentage"},Ie={__name:"progressBar",props:{progressV:{type:Number,required:!0}},emits:["progressValue"],setup(d,{emit:t}){const i=g(),l=g("left: 0"),h=g(0),r=t,n=d,a=u=>{window.addEventListener("mouseup",c),window.addEventListener("mousemove",o)},o=u=>{if(!i.value)return;let s=i.value.clientWidth,e=u.pageX-i.value.getBoundingClientRect().left;e<=0?e=0:e<s?e=e:e>=s&&(e=s),l.value=`left: ${e}px`,h.value=e/s,r("progressValue",Math.ceil(h.value*100))},c=()=>{window.removeEventListener("mouseup",c),window.removeEventListener("mousemove",o)},f=u=>{let s=i.value.clientWidth,e=u.pageX-i.value.getBoundingClientRect().left;e<=0?e=0:e<s?e=e:e>=s&&(e=s),l.value=`left: ${e}px`,h.value=e/s,r("progressValue",Math.ceil(h.value*100))};return X(n,u=>{const s=i.value.clientWidth,e=u.progressV/100*s;l.value=`left: ${e}px`}),(u,s)=>(B(),_("div",Le,[Ne,p("div",{class:"bar",ref_key:"bar",ref:i,onClick:f},[p("div",{class:"slider",style:A(l.value),onMousedown:a},null,36)],512),p("div",Fe,S(n.progressV)+"% ",1)]))}},$e=b(Ie,[["__scopeId","data-v-3f2d6ca8"]]),Ae=d=>(R("data-v-257f76fd"),d=d(),M(),d),ze={class:"Speed-bar"},De=Ae(()=>p("div",{class:"tt"},"流线速度",-1)),je={class:"percentage"},Ce={__name:"speedBar",props:{nowSpeed:Number,maxSpeed:Number},emits:["speedValue"],setup(d,{emit:t}){const i=g(),l=g("left: 0"),h=g(0),r=t,n=d,a=u=>{window.addEventListener("mouseup",c),window.addEventListener("mousemove",o)},o=u=>{if(!i.value)return;let s=i.value.clientWidth,e=u.pageX-i.value.getBoundingClientRect().left;e<=0?e=0:e<s?e=e:e>=s&&(e=s),l.value=`left: ${e}px`,h.value=e/s,r("speedValue",Math.ceil(h.value*n.maxSpeed))},c=()=>{window.removeEventListener("mouseup",c),window.removeEventListener("mousemove",o)},f=u=>{let s=i.value.clientWidth,e=u.pageX-i.value.getBoundingClientRect().left;e<=0?e=0:e<s?e=e:e>=s&&(e=s),l.value=`left: ${e}px`,h.value=e/s,r("speedValue",Math.ceil(h.value*n.maxSpeed))};return F(()=>{const s=Math.ceil(n.nowSpeed/n.maxSpeed*8);l.value=`left: ${s}vw`}),(u,s)=>(B(),_("div",ze,[De,p("div",{class:"bar",ref_key:"bar",ref:i,onClick:f},[p("div",{class:"slider",style:A(l.value),onMousedown:a},null,36)],512),p("div",je,S(n.nowSpeed),1)]))}},Ye=b(Ce,[["__scopeId","data-v-257f76fd"]]),Ee=d=>(R("data-v-09307573"),d=d(),M(),d),We={class:"controller"},He=Ee(()=>p("div",{class:"header"},"流线控制",-1)),Xe={class:"content"},qe={__name:"controller",props:{nowParticleNum:Number,maxParticleNum:Number,nowSpeed:Number,maxSpeed:Number,flowProgress:Number},emits:["particle-num-value","progress-value","speed-value"],setup(d,{emit:t}){const i=d,l=t,h=x(()=>i.nowParticleNum),r=x(()=>i.maxParticleNum),n=x(()=>i.nowSpeed),a=x(()=>i.maxSpeed),o=x(()=>i.flowProgress),c=s=>{o.value=s,l("progress-value",s)},f=s=>{h.value=s,l("particle-num-value",s)},u=s=>{n.value=s,l("speed-value",s)};return(s,e)=>(B(),_("div",We,[He,p("div",Xe,[N(ke,{nowParticleNum:h.value,maxParticleNum:r.value,onParticleNumValue:f},null,8,["nowParticleNum","maxParticleNum"]),N(Ye,{"now-speed":n.value,"max-speed":a.value,onSpeedValue:u},null,8,["now-speed","max-speed"]),N($e,{onProgressValue:c,"progress-v":o.value},null,8,["progress-v"])])]))}},et=b(qe,[["__scopeId","data-v-09307573"]]);export{Ke as S,et as c,Ze as f,Qe as t};
