import{u as K,a as w,s as O,r as v,c as x,b as g,d as Q,e as Z,f as ee,N as F,g as L,D as te,i as z,v as k,h as se}from"./axios-CRWlTX0B.js";import{b as ie,f as U,c as D,d as j,e as ae,r as B,g as I,M as E,h as N,u as re,j as oe}from"./initMap-BiXK8HwB.js";import{w as ne,p as le,a as de,b as fe,c as ue}from"./wind_back-aXWgdwBU.js";import{H as ce,r as p,g as he,v as me,h as pe,c as ge,o as we,E as y,x as C,b as T,d as V,e as u,f as A,i as H,u as P,t as ve,F as xe,l as X,p as Y,q as ye,s as be,_ as Pe}from"./index-l0_1r5o4.js";import{a as Be,r as _e,g as Se}from"./util-ZoIYSbFy.js";import"./stationInfo-DixEZJLI.js";import"./getStation-DC6WyyE7.js";const q=["/ffvsrc/flow/uv_10.bin","/ffvsrc/flow/uv_11.bin","/ffvsrc/flow/uv_12.bin","/ffvsrc/flow/uv_13.bin","/ffvsrc/flow/uv_14.bin","/ffvsrc/flow/uv_15.bin","/ffvsrc/flow/uv_16.bin","/ffvsrc/flow/uv_17.bin","/ffvsrc/flow/uv_18.bin","/ffvsrc/flow/uv_19.bin","/ffvsrc/flow/uv_20.bin","/ffvsrc/flow/uv_21.bin","/ffvsrc/flow/uv_22.bin","/ffvsrc/flow/uv_23.bin","/ffvsrc/flow/uv_24.bin","/ffvsrc/flow/uv_25.bin","/ffvsrc/flow/uv_26.bin","/ffvsrc/flow/uv_27.bin","/ffvsrc/flow/uv_28.bin","/ffvsrc/flow/uv_29.bin","/ffvsrc/flow/uv_30.bin","/ffvsrc/flow/uv_31.bin","/ffvsrc/flow/uv_32.bin","/ffvsrc/flow/uv_33.bin","/ffvsrc/flow/uv_34.bin","/ffvsrc/flow/uv_35.bin","/ffvsrc/flow/uv_36.bin","/ffvsrc/flow/uv_37.bin","/ffvsrc/flow/uv_38.bin","/ffvsrc/flow/uv_39.bin"];class Re{constructor(){this.type="custom",this.map=void 0,this.id="flow",this.renderingMode="3d",this.preheat=0,this.swapPointer=0,this.extent=ie(),this.randomSeed=U(Math.random()),this.loadWorker=void 0,this.progress=0,this.framesPerPhase=100,this.maxSpeed=U(),this.currentResourceUrl=0,this.maxParticleNum=65536,this.progressRate=U(),this.particleNum=K(65536),this.blockSizeX=16,this.blockSizeY=16,this.groupSizeX=Math.ceil(Math.sqrt(this.maxParticleNum)/this.blockSizeX),this.groupSizeY=Math.ceil(Math.sqrt(this.maxParticleNum)/this.blockSizeY),this.randomFillData=new Float32Array(this.maxParticleNum*6).map((e,i)=>i%6==4||i%6==5?0:Math.random()),this.toRef=void 0,this.fromRef=void 0,this.nextRef=void 0,this.uniformBuffer_frame=void 0,this.indexBuffer_voronoi=void 0,this.vertexBuffer_voronoi=void 0,this.uniformBuffer_static=void 0,this.storageBuffer_particle=void 0,this.particleRef=w(this.randomFillData),this.flowTexture=void 0,this.layerTexture1=void 0,this.layerTexture2=void 0,this.showBinding=void 0,this.layerBindings=void 0,this.voronoiBinding=void 0,this.particleBinding=void 0,this.voronoiToBinding=void 0,this.simulationBinding=void 0,this.trajectoryBindings=void 0,this.showPipeline=void 0,this.layerPipeline=void 0,this.voronoiPipeline=void 0,this.particlePipeline=void 0,this.trajectoryPipeline=void 0,this.simulationPipeline=void 0,this.swapPasses=void 0,this.voronoiPass=void 0,this.simulationPass=void 0,this.isHided=!1,this.isIdling=!1,this.showArrow=!0,this.showVoronoi=!0,this.nextPrepared=!1,this.isInitialized=!1,this.nextPreparing=!1}async onAdd(e,i){this.map=e,this.addWorker(new Worker(new URL("/assets/flowJson.worker-DpdRasT2.js",import.meta.url),{type:"module"})),this.extent.reset(117.6008663,29.00020341,124.9995024,33.99616132),this.storageBuffer_particle=O({name:"Storage Buffer (Particle Position & Velocity)",resource:{arrayRef:this.particleRef}}),this.uniformBuffer_static=D({name:"Uniform Buffer (Flow Layer Static)",blocks:[j({name:"staticUniform",map:{groupSize:ae(this.groupSizeX,this.groupSizeY),extent:this.extent.boundary}})]}),this.uniformBuffer_frame=D({name:"Uniform Buffer (Flow Layer Frame)",blocks:[j({name:"frameUniform",dynamic:!0,map:{randomSeed:this.randomSeed,viewPort:this.map.screen.sizeF,mapBounds:this.map.cameraBounds.boundary,zoomLevel:this.map.zoom,progressRate:this.progressRate,maxSpeed:this.maxSpeed}})]}),this.layerTexture1=this.map.screen.createScreenDependentTexture("Texture (Background 1)"),this.layerTexture2=this.map.screen.createScreenDependentTexture("Texture (Background 2)"),this.flowTexture=this.map.screen.createScreenDependentTexture("Texture (Velocity)","rg32float"),this.maskTexture=this.map.screen.createScreenDependentTexture("Texture(Mask)"),await this.getMask("/ffvsrc/flowbound2.geojson"),this.maskPass=B({name:"mask render pass",colorAttachments:[{colorResource:this.maskTexture}]}).add(this.maskPipline,this.maskBinding),await this.getVoronoi("/ffvsrc/flow/station.bin"),await this.addVoronoiBindingSync("/ffvsrc/flow/uv_20.bin"),this.swapVoronoiBinding(),await this.addVoronoiBindingSync("/ffvsrc/flow/uv_21.bin"),this.currentResourceUrl=1,this.nextPrepared=!0,this.voronoiPipeline=v({name:"Render Pipeline (Voronoi Flow)",shader:{module:x.load("Shader (Flow Voronoi)","/shader/flowshader/flowVoronoi.wgsl")}}),this.voronoiPass=B({name:"Render Pass (Voronoi Flow From)",colorAttachments:[{colorResource:this.flowTexture}],depthStencilAttachment:{depthStencilResource:this.map.depthTexture}}).add(this.voronoiPipeline,this.voronoiBinding),this.simulationBinding=g({name:"Binding (Particle Simulation)",range:()=>[this.groupSizeX,this.groupSizeY],textures:[{texture:this.flowTexture,sampleType:"unfilterable-float"}],storages:[{buffer:this.storageBuffer_particle,writable:!0}],uniforms:[{name:"controllerUniform",map:{particleNum:Q(this.maxParticleNum),dropRate:I(.003),dropRateBump:I(.001),speedFactor:I(1)}}],sharedUniforms:[{buffer:this.uniformBuffer_frame},{buffer:this.uniformBuffer_static},{buffer:this.map.dynamicUniformBuffer}]}),this.simulationPipeline=Z({name:"Compute Pipeline (Flow Simulation)",shader:{module:x.load("Shader (Particle Simulation)","/shader/flowshader/simulation.compute.wgsl")},constants:{blockSize:16}}),this.simulationPass=ee({name:"Compute Pass (Particle Simulation)"}).add(this.simulationPipeline,this.simulationBinding),this.trajectoryBindings=[g({name:"Binding (Background Swap 1)",range:()=>[4],textures:[{texture:this.layerTexture2}]}),g({name:"Binding (Background Swap 2)",range:()=>[4],textures:[{texture:this.layerTexture1}]})],this.trajectoryPipeline=v({name:"Rendej pipeline (Background Swap)",shader:{module:x.load("Shader (Background Swap)","/shader/flowshader/swap.wgsl")},primitive:{topology:"triangle-strip"},depthTest:!1}),this.particleBinding=g({name:"Binding (Particles)",range:()=>[2,this.particleNum.n],storages:[{buffer:this.storageBuffer_particle}],sharedUniforms:[{buffer:this.uniformBuffer_frame},{buffer:this.uniformBuffer_static},{buffer:this.map.dynamicUniformBuffer}]}),this.particlePipeline=v({name:"Render Pipeline (Particles)",shader:{module:x.load("Shader (Particles)","/shader/flowshader/particles.wgsl")},primitive:{topology:"line-list"}}),this.swapPasses=[B({name:"Render Pass (Past Trajectory 1)",colorAttachments:[{colorResource:this.layerTexture1}],depthStencilAttachment:{depthStencilResource:this.map.depthTexture}}).add(this.trajectoryPipeline,this.trajectoryBindings[0]).add(this.particlePipeline,this.particleBinding),B({name:"Render Pass (Past Trajectory 2)",colorAttachments:[{colorResource:this.layerTexture2}],depthStencilAttachment:{depthStencilResource:this.map.depthTexture}}).add(this.trajectoryPipeline,this.trajectoryBindings[1]).add(this.particlePipeline,this.particleBinding),B({name:"Render Pass (Trajectory Empty)",colorAttachments:[{colorResource:this.layerTexture1},{colorResource:this.layerTexture2}]})],this.layerBindings=[g({name:"Binding (Layer Renderig 1)",range:()=>[4],textures:[{texture:this.layerTexture1}]}),g({name:"Binding (Layer Renderig 2)",range:()=>[4],textures:[{texture:this.layerTexture2}]})],this.layerPipeline=v({name:"Render Pipeline (Layer Rendering)",shader:{module:x.load("Shader (Flow Layer Rendering)","/shader/flowshader/flowLayer.wgsl")},primitive:{topology:"triangle-strip"},colorTargetStates:[{blend:F}]}),this.showBinding=g({name:"Binding (Flow Show)",range:()=>[4],textures:[{texture:this.flowTexture,sampleType:"unfilterable-float"},{texture:this.maskTexture,sampleType:"unfilterable-float"}],sharedUniforms:[{buffer:this.uniformBuffer_frame}]}),this.showPipeline=v({name:"Render Pipeline (Flow Show)",shader:{module:x.load("Shader (Flow Show)","/shader/flowshader/flowShow.wgsl")},primitive:{topology:"triangle-strip"},colorTargetStates:[{blend:F}]}),this.arrowPipeline=v({name:"Render Pipeline (Flow Arrow)",shader:{module:x.load("Shader (Flow Show)","/shader/flowshader/arrow.wgsl")},primitive:{topology:"triangle-strip"},colorTargetStates:[{blend:F}]}),this.swapPasses[0].executable=!0,this.swapPasses[1].executable=!1,this.swapPasses[2].executable=!1,this.layerBindings[0].executable=!0,this.layerBindings[1].executable=!1,this.showArrow&&this.map.add2RenderPass(this.arrowPipeline,this.particleBinding),this.showVoronoi&&this.map.add2RenderPass(this.showPipeline,this.showBinding).add2RenderPass(this.layerPipeline,this.layerBindings[0]).add2RenderPass(this.layerPipeline,this.layerBindings[1]),this.map.add2PreProcess(this.maskPass).add2PreProcess(this.voronoiPass).add2PreProcess(this.simulationPass).add2PreProcess(this.swapPasses[0]).add2PreProcess(this.swapPasses[1]).add2PreProcess(this.swapPasses[2]),this.map.on("movestart",()=>this.idle()),this.map.on("move",()=>this.idle()),this.map.on("moveend",()=>this.restart()),this.map.on("dragstart",()=>this.idle()),this.map.on("drag",()=>this.idle()),this.map.on("dragend",()=>this.restart()),this.map.on("zoomstart",()=>this.idle()),this.map.on("zoom",()=>this.idle()),this.map.on("zoomend",()=>this.restart()),this.map.on("rotatestart",()=>this.idle()),this.map.on("rotate",()=>this.idle()),this.map.on("rotateend",()=>this.restart()),this.map.on("pitchstart",()=>this.idle()),this.map.on("pitch",()=>this.idle()),this.map.on("pitchend",()=>this.restart()),this.isInitialized=!0}async render(e,i){if(this.map.triggerRepaint(),!(!this.isInitialized||this.isIdling||this.preheat-- >0)){if(this.isHided){this.makeVisibility(!1);return}else this.makeVisibility(!0);this.showBinding.executable=!1,this.maskBinding.executable=!0,this.swapPasses[0].executable=this.swapPointer,this.layerBindings[0].executable=this.swapPointer,this.swapPasses[1].executable=1-this.swapPointer,this.layerBindings[1].executable=1-this.swapPointer,this.updateVoronoi(),this.randomSeed.n=Math.random(),this.swapPointer=(this.swapPointer+1)%2}}idle(){this.isIdling=!0,this.showBinding.executable=!0,this.swapPasses[2].executable=!0,this.arrowPipeline.executable=!1,this.swapPasses[0].executable=!1,this.swapPasses[1].executable=!1,this.layerBindings[0].executable=!1,this.layerBindings[1].executable=!1}restart(){this.preheat=10,this.isIdling=!1,this.arrowPipeline.executable=!0,this.swapPasses[2].executable=!1,this.swapPasses[2].executable=!1,this.particleRef.value=this.randomFillData}show(){this.isHided=!1}hide(){this.isHided=!0}makeVisibility(e){e?(this.showPipeline.executable=!0,this.voronoiPass.executable=!0,this.simulationPass.executable=!0):(this.showPipeline.executable=!1,this.layerBindings[0].executable=!1,this.layerBindings[1].executable=!1,this.voronoiPass.executable=!1,this.swapPasses[0].executable=!1,this.swapPasses[1].executable=!1,this.swapPasses[2].executable=!1,this.simulationPass.executable=!1)}updateMaxSpeed(e){this.maxSpeed.n=e>this.maxSpeed.n?e:this.maxSpeed.n}updateVoronoi(){this.nextPreparing||(this.progress===0&&(this.currentResourceUrl=(this.currentResourceUrl+1)%q.length,this.addVoronoiBindingAsync(q[this.currentResourceUrl])),this.progress=Math.min(this.progress+1,this.framesPerPhase-1),this.nextPrepared&&this.progress===this.framesPerPhase-1&&(this.progress=0,this.swapVoronoiBinding()),this.progressRate.n=this.progress/(this.framesPerPhase-1))}async getVoronoi(e){const i=await L.get(e,{responseType:"arraybuffer"}),s=new te(new Float32Array(i.data)),t=[],l=s.triangles;for(let n=0;n<s.points.length;n+=2){const r=$(E.mercatorXfromLon(s.points[n+0])),m=$(E.mercatorYfromLat(s.points[n+1]));t.push(r[0]),t.push(m[0]),t.push(r[1]),t.push(m[1])}this.toRef=w(new Float32Array(s.points.length).fill(0)),this.fromRef=w(new Float32Array(s.points.length).fill(0)),this.nextRef=w(new Float32Array(s.points.length).fill(0)),this.indexBuffer_voronoi=z({name:`IndexBuffer (Voronoi Index (${e}))`,resource:{arrayRef:w(new Uint32Array(l))}}),this.vertexBuffer_voronoi=k({name:`VertexBuffer (Station Position (${e}))`,resource:{arrayRef:w(new Float32Array(t)),structure:[{components:4}]}}),this.voronoiBinding=g({name:"Binding (Flow-Field Voronoi)",range:()=>[this.indexBuffer_voronoi.length],index:{buffer:this.indexBuffer_voronoi},textures:[{texture:this.maskTexture,sampleType:"unfilterable-float"}],vertices:[{buffer:this.vertexBuffer_voronoi},{buffer:k({name:"VertexBuffer (Station Velocity (From)",resource:{arrayRef:this.fromRef,structure:[{components:2}]}})},{buffer:k({name:"VertexBuffer (Station Velocity (To)",resource:{arrayRef:this.toRef,structure:[{components:2}]}})}],sharedUniforms:[{buffer:this.uniformBuffer_frame},{buffer:this.uniformBuffer_static},{buffer:this.map.dynamicUniformBuffer}]})}async getMask(e){let s=(await L.get(e)).data.features[0].geometry.coordinates[0];var t=N.flatten(s),l=N(t.vertices,t.holes,t.dimensions);s=t.vertices.flat();const n=`
        struct Vinput{
            @builtin(vertex_index) vertexIndex: u32,
            @location(0) position: vec2f,
        }
        struct Voutput {
            @builtin(position) position: vec4f,
        }

        struct FrameUniformBlock {
            randomSeed: f32,
            viewPort: vec2f,
            mapBounds: vec4f,
            zoomLevel: f32,
            progressRate: f32,
            maxSpeed: f32,
        };
        
        struct StaticUniformBlock {
            groupSize: vec2u,
            extent: vec4f,
        };
        
        struct DynamicUniformBlock {
            far: f32,
            near: f32,
            uMatrix: mat4x4f,
            centerLow: vec3f,
            centerHigh: vec3f,
        };
        
        // Uniform Bindings
        @group(0) @binding(0) var<uniform> frameUniform: FrameUniformBlock;
        @group(0) @binding(1) var<uniform> staticUniform: StaticUniformBlock;
        @group(0) @binding(2) var<uniform> dynamicUniform: DynamicUniformBlock;

        
        fn translateRelativeToEye(high: vec3f, low: vec3f) -> vec3f {

            let highDiff = high - dynamicUniform.centerHigh;
            let lowDiff = low - dynamicUniform.centerLow;

            return highDiff + lowDiff;
        }

        @vertex
        fn vMain(in: Vinput) -> Voutput {
            
            let pos = vec4f(in.position,0.0,1.0);
            let cs_pos = dynamicUniform.uMatrix * vec4f(translateRelativeToEye(vec3f(in.position, 0.0), vec3f(0.0)), 1.0);

            var out: Voutput;
            out.position = cs_pos;
            return out;
        }
    
        @fragment
        fn fMain(in: Voutput) -> @location(0) vec4f {
            return vec4f(1.0,0.0,0.0,0.3);
        }
    `;let r=[];for(let b=0;b<s.length;b+=2){let[S,R]=ke(s[b],s[b+1]);r.push(S),r.push(R)}let m=k({name:"vertexbuffer",resource:{arrayRef:w(new Float32Array(r)),structure:[{components:2}]}}),M=z({name:"indexbuffer",resource:{arrayRef:w(new Uint32Array(l))}});this.maskBinding=g({name:"binding",range:()=>[l.length],vertices:[{buffer:m}],index:{buffer:M},sharedUniforms:[{buffer:this.uniformBuffer_frame},{buffer:this.uniformBuffer_static},{buffer:this.map.dynamicUniformBuffer}]}),this.maskPipline=v({name:"mask pipline",shader:{module:se({name:"shader",codeFunc:()=>n})}})}async addVoronoiBindingSync(e){this.nextPreparing=!0;const i=await L.get(e,{responseType:"arraybuffer"}),s=new Float32Array(i.data);let t=-1/0;for(let l=0;l<s.length;l+=2){const n=s[l+0],r=s[l+1],m=Math.sqrt(n*n+r*r);t=m>t?m:t}this.nextRef.value=s,this.updateMaxSpeed(t),this.nextPreparing=!1,this.nextPrepared=!0}swapVoronoiBinding(){let e=this.fromRef.value;this.fromRef.value=this.toRef.value,this.toRef.value=e,e=this.toRef.value,this.toRef.value=this.nextRef.value,this.nextRef.value=e,this.nextPrepared=!1}addWorker(e){const i=this;this.loadWorker=e,this.loadWorker.addEventListener("message",s=>{const{url:t,maxSpeed:l,uvs:n}=s.data;i.updateMaxSpeed(l),i.nextRef.value=n,i.nextPrepared=!0,i.nextPreparing=!1})}addVoronoiBindingAsync(e){this.nextPreparing=!0,this.loadWorker.postMessage({url:e})}}function $(f){const e=new Float32Array(2);e[0]=f;const i=f-e[0];return e[1]=i,e}function ke(f,e){let i=(180+f)/360,s=(180-180/Math.PI*Math.log(Math.tan(Math.PI/4+e*Math.PI/360)))/360;return[i,s]}const Te=ce("model",{state:()=>{const f=p(null),e=p(0),i=p("no");function s(){f.value=null,e.value=0,i.value="no"}function t(n){f.value=n,e.value=0,i.value="running"}function l(){i.value="finish"}return{modelID:f,modelProgress:e,modelStatus:i,reset:s,run:t,finish:l}},persist:!0}),_=f=>(ye("data-v-12a99ee7"),f=f(),be(),f),Ve={class:"z-10 absolute flex flex-col top-6 left-6 h-64 w-72 rounded-xl shadow text-white shadow-slate-800 bg-[#262626]"},Le=_(()=>u("div",{class:"h-10 leading-10 px-3 font-bold rounded-t-xl bg-[#3d6796]"}," 模型计算 ",-1)),Me={class:"flex-auto m-2 rounded-md flex flex-col bg-[#494949]"},Fe={class:"my-2 mx-2 text-lg"},Ue={class:"flex flex-col flex-auto mb-3 text-base mx-2 bg-slate-300 rounded-md"},Ie=_(()=>u("div",{class:"h-8 leading-8 px-3 rounded-t-md bg-[#3d6796]"},"模型状态",-1)),Ae={class:"flex flex-auto justify-center items-center text-black"},We={key:0,class:"relative bottom-1"},ze={key:1,class:"relative bottom-1 flex flex-col justify-center"},De=_(()=>u("div",{class:"m-3 pl-2"},"模型运行完成",-1)),je={key:2,class:"w-full px-3 relative bottom-1"},Ee=_(()=>u("div",{class:"mb-2"},"运行进度",-1)),Ne={class:"flex items-center"},Ce={class:"pl-4"},He=_(()=>u("canvas",{id:"GPUFrame",class:"playground"},null,-1)),Xe=he({__name:"ModelMapView",setup(f){p(null),p(null);const e=re(),i=me(),s=p(null),t=Te(),l=p(null),n=p(null);let r=0;const m=p(0),M=async d=>{const o=d,c=["pngsource","contourSrc"];["addWater","contourLayer","contourLabel"].forEach(a=>{e.map.getLayer(a)&&e.map.removeLayer(a)}),c.forEach(a=>{e.map.getSource(a)&&e.map.removeSource(a)}),n.value=await le(e.map,o),de(e.map)},b=async d=>{const o=d,c=["pngsource2","contourSrc2"];["addWater2","contourLayer2","contourLabel2"].forEach(a=>{e.map.getLayer(a)&&e.map.removeLayer(a)}),c.forEach(a=>{e.map.getSource(a)&&e.map.removeSource(a)}),n.value=await fe(e.map,o),ue(e.map)},S=new ne,R=new Re;pe(l,async(d,o)=>{if(!e.map){y({message:"地图尚未加载完毕，请等待..",type:"warning"});return}switch(o){case 0:S.hide();break;case 1:R.hide();break;case 2:clearInterval(m.value);const c=["pngsource","contourSrc","pngsource2","contourSrc2"];["addWater","contourLayer","contourLabel","addWater2","contourLayer2","contourLabel2"].forEach(a=>{e.map.getLayer(a)&&e.map.removeLayer(a)}),c.forEach(a=>{e.map.getSource(a)&&e.map.removeSource(a)});break}switch(d){case 0:y({offset:50,message:"正在加载风场..."}),S.show(),e.map.flyTo({center:[122.92069384160902,33.5063086220937],zoom:5.184918089769568,duration:500});break;case 1:y({offset:50,message:"正在加载流场..."}),R.show(),e.map.flyTo({center:[122.92069384160902,32.0063086220937],zoom:7.512044631152661,duration:500});break;case 2:y({offset:50,message:"正在加载增水场..."}),e.map.flyTo({center:[122.92069384160902,32.0063086220937],zoom:6.912044631152661,duration:500}),r=4,m.value=setInterval(()=>{r%2&&M(r),!(r%2)&&b(r),r=(r+1)%195},3e3);break}});const W=p(0);ge(()=>W.value==1?"当前有台风":"当前无台风");const G=async()=>{console.log("run model");const d=await _e();if(console.log(d),d){t.run("");const o=setInterval(async()=>{console.log("in");const c=await Se();console.log(c);const h=t.modelProgress+=5*Math.random();h>100?(t.modelProgress=100,t.finish(),clearInterval(o),y({message:"模型运行完成",type:"success"})):t.modelProgress=h},100)}else t.reset(),y({message:"模型运行失败",type:"warning"}),console.log("fail")},J=()=>{C.push("/model/data")};return we(async()=>{W.value=(await L.get("/api/v1/data/level/typh")).data.data;const d=await oe(s.value);y({message:"地图加载完毕",type:"success"}),window.addEventListener("keydown",o=>{o.key==="\\"&&console.log(d)}),Be(d),d.on("click",o=>{const c=[[o.point.x-3,o.point.y-3],[o.point.x+3,o.point.y+3]];if(d.getLayer("stations")){const h=d.queryRenderedFeatures(c,{layers:["stations"]});if(h&&h[0]){const a=h[0].properties.id;i.currentStationID=a,C.push("/model/data")}}})}),(d,o)=>{const c=X("el-button"),h=X("el-slider");return T(),V(xe,null,[u("div",Ve,[Le,u("div",Me,[u("div",Fe,[A(c,{type:"info",class:"w-full bg-slate-300 hover:bg-slate-400/90 border-0 text-black",onClick:G,disabled:P(t).modelStatus==="running"},{default:H(()=>[Y("运行模型")]),_:1},8,["disabled"])]),u("div",Ue,[Ie,u("div",Ae,[P(t).modelStatus==="no"?(T(),V("div",We," 当前无模型运行 ")):P(t).modelStatus==="finish"?(T(),V("div",ze,[De,A(c,{type:"primary",color:"#3d6796",class:"w-full border-0",onClick:J},{default:H(()=>[Y("显示模型运行结果")]),_:1})])):(T(),V("div",je,[Ee,u("div",Ne,[A(h,{modelValue:P(t).modelProgress,"onUpdate:modelValue":o[0]||(o[0]=a=>P(t).modelProgress=a),class:"w-[80%]"},null,8,["modelValue"]),u("div",Ce,ve(P(t).modelProgress.toFixed(1)+"%"),1)])]))])])])]),u("div",{ref_key:"mapContainerRef",ref:s,class:"map-container h-full w-full"},null,512),He],64)}}}),Qe=Pe(Xe,[["__scopeId","data-v-12a99ee7"]]);export{Qe as default};
