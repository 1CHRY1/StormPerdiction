python:
  /root/miniconda3/envs/Env1/bin/python
data:
  /usr/local/resource/StormData
dataprocess:
  /usr/local/resource/StormData/DataProcess
webdriver:
  "/usr/bin/chromedriver"

spring:
  datasource:
    level:
      jdbc-url: jdbc:sqlite:${dataprocess}/Forcasting.db
      driver-class-name: org.sqlite.JDBC
    nc:
      jdbc-url: jdbc:sqlite:${dataprocess}/NC.db
      driver-class-name: org.sqlite.JDBC
    meteorology:
      jdbc-url: jdbc:sqlite:${dataprocess}/Clawing/Meteorology.db
      driver-class-name: org.sqlite.JDBC

stations:
  ${dataprocess}/station_service.json
Typhoon:
  ${dataprocess}/Clawing/typhoon.json

updateData:
  ${dataprocess}/UpdateData.py
updateManData:
  ${dataprocess}/UpdateManData.py

clawingCloud:
  ${dataprocess}/Clawing/Cloud.py
clawingRadar:
  ${dataprocess}/Clawing/Radar.py
clawingRainfall:
  ${dataprocess}/Clawing/Rainfall.py
clawingRainfallpre:
  ${dataprocess}/Clawing/Rainfall_pre.py
clawingTyphoon:
  ${dataprocess}/Clawing/Typhoon.py
deleteClawingData:
  ${dataprocess}/Clawing/DeleteData.py

meteorology:
  file:
    cloud:
      "${data}/qixiangchanpin/weixingyuntu"
    radar:
      "${data}/qixiangchanpin/leidapintu"
    rainfall:
      "${data}/qixiangchanpin/jiangshuiliangshikuang"
    rainfallpre:
      "${data}/qixiangchanpin/jiangshuiliangyubao"
  db:
    "${dataprocess}/Clawing/Meteorology.db"


DataProcessLog:
  ${dataprocess}/logfile.log

FieldGenerating:
  ${dataprocess}/FieldProcess/FieldGenerating.py
FieldPath:
  "${data}/Field"

AddFieldGenerating:
  ${dataprocess}/FieldProcess/addWaterScripts.py
AddField:
  "${data}/Field/Add/out"
AddFieldMask:
  "${dataprocess}/FieldProcess/mask/mask.shp"

FlowField:
  "${data}/Field/Flow"
WindField:
  "${data}/Field/Wind"

ScriptName:
  "runForecastPlatformauto.sh"
DirectoryPath:
  "/usr/local/resource/StormData"
ForecastDataPath:
  "${data}/forecastData"
ManuelUpdating:
  ${dataprocess}/UpdateDataMan.py

TyphoonUrl:
  http://typhoon.zjwater.gov.cn/